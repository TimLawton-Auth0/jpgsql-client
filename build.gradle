
buildscript {

  repositories {
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
  }
 
  dependencies {
    classpath "net.ltgt.gradle:gradle-apt-plugin:0.10"
    classpath "com.prezi.pride:gradle-pride-plugin:0.11"
  }
	
}


plugins {
  id "com.jfrog.bintray" version "1.7.3"
}

version = 'master-SNAPSHOT'
group = 'io.zrz'

apply plugin: 'pride'
apply plugin: 'java-library'
apply plugin: 'net.ltgt.apt'
apply plugin: 'maven-publish'
apply plugin: 'eclipse'


repositories {
  jcenter()
  maven { url "http://dl.bintray.com/zourzouvillys/maven" }
}


compileJava {
  sourceCompatibility = 1.8
}

eclipse {

  classpath {
    containers.clear()
    containers.add('org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8')
  }

  jdt.file.withProperties { props ->
    props.put('org.eclipse.jdt.core.compiler.codegen.targetPlatform', '1.8')
    props.put('org.eclipse.jdt.core.compiler.source', '1.8')
    props.put('org.eclipse.jdt.core.compiler.compliance', '1.8')
  }
  
  classpath.defaultOutputDir = new File(buildDir, "classes/main")
  
}

dependencies {

	apt 'org.immutables:immutables:2.5.6'
	apt 'org.projectlombok:lombok:1.16.20'
	compile 'org.projectlombok:lombok:1.16.20'

	compileOnly 'io.zrz:visitors:0.1'
	apt 'io.zrz:visitors:0.1'

    api 'org.reactivestreams:reactive-streams:1.0.0'
    api 'org.slf4j:slf4j-api:1.7.21'

    implementation 'org.postgresql:postgresql:42.1.3'
	implementation 'com.google.guava:guava:22.0'
	implementation 'io.reactivex.rxjava2:rxjava:2.1.2'
	implementation 'net.jodah:failsafe:1.0.4'

	testImplementation 'ch.qos.logback:logback-classic:1.2.3'
	testImplementation 'org.slf4j:jul-to-slf4j:1.7.21'
	
    testCompile 'junit:junit:4.12'
    
    //
    	compile 'io.netty:netty-buffer:4.1.17.Final'
	compile 'io.netty:netty-codec:4.1.17.Final'
	compile 'io.netty:netty-handler:4.1.17.Final'
	compile 'io.netty:netty-transport:4.1.17.Final'
	
	    
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.6'
}


task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}


publishing {
  publications {
    maven(MavenPublication) { 
    		from components.java
      	groupId 'io.zrz.jpgsql'
      	artifactId 'jpgsql-client'
      	version project.version
    }
  }
}


bintray {

  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
    
  publications = ['maven']
    
  pkg {
    repo = 'maven'
    name = 'jpgsql'
    userOrg = user
    licenses = ['Apache-2.0']
    publicDownloadNumbers = false
    vcsUrl = 'https://github.com/zourzouvillys/jpgsql-client.git'
  }    
    
}


